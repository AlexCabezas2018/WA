CREATE OR REPLACE TABLE users (
    id INT NOT NULL AUTO_INCREMENT,
    email VARCHAR(255) NOT NULL,
    pass VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL,
    gender VARCHAR(255) NOT NULL,
    birth_date DATE,
    profile_img LONGBLOB,
    puntuation INT DEFAULT 0,
    
    PRIMARY KEY(id, email)
);

CREATE OR REPLACE TABLE friend_requests(
    username_from VARCHAR(255) NOT NULL REFERENCES users(email),
    username_to VARCHAR(255) NOT NULL REFERENCES users(email),

    PRIMARY KEY (username_from,username_to)
);

CREATE OR REPLACE TABLE friendships (
    username_1 VARCHAR(255) NOT NULL REFERENCES users(email) ,
    username_2 VARCHAR(255) NOT NULL REFERENCES users(email),

    PRIMARY KEY (username_1,username_2)
);

CREATE OR REPLACE TABLE questions (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    question_body VARCHAR(255) NOT NULL ,
    initial_options INT NOT NULL
);

CREATE OR REPLACE TABLE answers(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_question INT NOT NULL,
    answer_body VARCHAR(255) NOT NULL,
    
    FOREIGN KEY (id_question) REFERENCES questions(id)
);

CREATE OR REPLACE TABLE user_answers (
    username VARCHAR(255) NOT NULL REFERENCES users(email),
    id_answer INT NOT NULL REFERENCES answers(id),

    PRIMARY KEY (username,id_answer)
);

CREATE OR REPLACE TABLE answer_like_friend(
    email_user VARCHAR(255) NOT NULL REFERENCES users(email),
    email_friend VARCHAR(255) NOT NULL REFERENCES users(email),
    id_question INT NOT NULL REFERENCES id(questions),
    id_answer INT NOT NULL REFERENCES id(answers),
    
    PRIMARY KEY (email_user, email_friend, id_question)
);

CREATE OR REPLACE TABLE user_images(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	username VARCHAR(255) NOT NULL REFERENCES users(id) ,
    image LONGBLOB
);